#include <iostream>
#include <vector>
#include <fstream>

int main() {
    // Grid dimensions
    const int grid_width = 35;
    const int grid_height = 25;

    // List of occupied cells as (x, y) coordinates
    std::vector<std::pair<int, int>> occupied_cells = {
        {2,2}, {3,2}, {6,2}, {8,2}, {9,2}, {10,2}, {11,2}, {12,2}, {13,2}, {14,2}, {15,2}, {16,2}, {17,2}, {19,2},
        {20,2}, {21,2}, {22,2}, {23,2}, {24,2}, {25,2}, {26,2}, {27,2}, {28,2}, {30,2}, {33,2}, {34,2}, {2,3}, {5,3},
        {6,3}, {30,3}, {31,3}, {33,3}, {34,3}, {2,4}, {3,4}, {5,4}, {6,4}, {8,4}, {9,4}, {10,4}, {11,4}, {12,4},
        {13,4}, {14,4}, {15,4}, {16,4}, {17,4}, {19,4}, {20,4}, {21,4}, {22,4}, {23,4}, {24,4}, {25,4}, {26,4},
        {27,4}, {28,4}, {30,4}, {33,4}, {34,4}, {3,5}, {5,5}, {30,5}, {33,5}, {5,6}, {8,6}, {9,6}, {10,6}, {11,6},
        {12,6}, {13,6}, {14,6}, {15,6}, {16,6}, {17,6}, {19,6}, {20,6}, {21,6}, {22,6}, {23,6}, {24,6}, {25,6},
        {26,6}, {27,6}, {28,6}, {30,6}, {33,6}, {2,7}, {3,7}, {5,7}, {6,7}, {30,7}, {31,7}, {34,7}, {2,8}, {3,8},
        {6,8}, {8,8}, {9,8}, {10,8}, {11,8}, {12,8}, {13,8}, {14,8}, {15,8}, {16,8}, {17,8}, {19,8}, {20,8}, {21,8},
        {22,8}, {23,8}, {24,8}, {25,8}, {26,8}, {27,8}, {28,8}, {31,8}, {34,8}, {2,9}, {6,9}, {30,9}, {31,9}, {34,9},
        {5,10}, {6,10}, {8,10}, {9,10}, {10,10}, {11,10}, {12,10}, {13,10}, {14,10}, {15,10}, {16,10}, {17,10},
        {19,10}, {20,10}, {21,10}, {22,10}, {23,10}, {24,10}, {25,10}, {26,10}, {27,10}, {28,10}, {30,10}, {2,11},
        {3,11}, {6,11}, {30,11}, {33,11}, {2,12}, {3,12}, {5,12}, {6,12}, {8,12}, {9,12}, {10,12}, {11,12}, {12,12},
        {13,12}, {14,12}, {15,12}, {16,12}, {17,12}, {19,12}, {20,12}, {21,12}, {22,12}, {23,12}, {24,12}, {25,12},
        {26,12}, {27,12}, {28,12}, {30,12}, {33,12}, {34,12}, {2,13}, {3,13}, {5,13}, {6,13}, {31,13}, {34,13},
        {2,14}, {5,14}, {6,14}, {8,14}, {9,14}, {10,14}, {11,14}, {12,14}, {13,14}, {14,14}, {15,14}, {16,14},
        {17,14}, {19,14}, {20,14}, {21,14}, {22,14}, {23,14}, {24,14}, {25,14}, {26,14}, {27,14}, {28,14}, {30,14},
        {34,14}, {3,15}, {5,15}, {6,15}, {30,15}, {31,15}, {33,15}, {2,16}, {3,16}, {5,16}, {8,16}, {9,16}, {10,16},
        {11,16}, {12,16}, {13,16}, {14,16}, {15,16}, {16,16}, {17,16}, {19,16}, {20,16}, {21,16}, {22,16}, {23,16},
        {24,16}, {25,16}, {26,16}, {27,16}, {28,16}, {2,17}, {3,17}, {6,17}, {30,17}, {31,17}, {33,17}, {3,18},
        {5,18}, {6,18}, {8,18}, {9,18}, {10,18}, {11,18}, {12,18}, {13,18}, {14,18}, {15,18}, {16,18}, {17,18},
        {19,18}, {20,18}, {21,18}, {22,18}, {23,18}, {24,18}, {25,18}, {26,18}, {27,18}, {28,18}, {30,18}, {31,18},
        {33,18}, {2,19}, {3,19}, {5,19}, {6,19}, {30,19}, {31,19}, {34,19}, {3,20}, {6,20}, {8,20}, {9,20}, {10,20},
        {11,20}, {12,20}, {13,20}, {14,20}, {15,20}, {16,20}, {17,20}, {19,20}, {20,20}, {21,20}, {22,20}, {23,20},
        {24,20}, {25,20}, {26,20}, {27,20}, {28,20}, {30,20}, {31,20}
    };

    // Open files for grid and simulation results
    std::ofstream grid_file("grid_data.txt");
    std::ofstream results_file("results_data.txt");

    // Initialize grid and write occupied cells to file
    grid_file << "# x y value\n";
    for (int y = 0; y < grid_height; ++y) {
        for (int x = 0; x < grid_width; ++x) {
            int value = 0;  // Default for empty cells
            for (const auto& cell : occupied_cells) {
                if (cell.first == x && cell.second == y) {
                    value = 1;  // Mark as occupied
                    break;
                }
            }
            grid_file << x << " " << y << " " << value << "\n";
        }
        grid_file << "\n";
    }

    // Simulation results
    int finishing_timestep = 2532;
    int task_waiting_time = 14666;

    // Write results for bar chart
    results_file << "Finishing_Timestep " << finishing_timestep << "\n";
    results_file << "Task_Waiting_Time " << task_waiting_time << "\n";

    // Close files
    grid_file.close();
    results_file.close();

    std::cout << "Data files generated: grid_data.txt and results_data.txt\n";
    return 0;
}
